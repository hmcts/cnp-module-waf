{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the waf"
      }
    },
    "location": { 
      "type": "string", 
      "allowedValues": [ 
          "UK South", 
          "UK West",
          "West Europe"
      ], 
      "metadata": { 
          "description": "Location of the WAF" 
      } 
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "capacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],      
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "backendaddress": {
      "type": "string",
      "metadata": {
        "description": "IP Addresses for backend endpoint"
      }
    },
    "wafEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "WAF Enabled"
      }
    },
    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Detection",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "wafRuleSetType": {
      "type": "string",
      "allowedValues": [
        "OWASP"
      ],
      "defaultValue": "OWASP",
      "metadata": {
        "description": "WAF Rule Set Type"
      }
    },
    "wafRuleSetVersion": {
      "type": "string",
      "allowedValues": [
        "2.2.9",
        "3.0"
      ],
      "defaultValue": "3.0",
      "metadata": {
        "description": "WAF Rule Set Version"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the vnet"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet"
      }
    }
  },
  "variables": {
    "applicationGatewayName": "[parameters('name')]",
    "publicIPAddressName": "[concat(parameters('name'), '-', 'ip')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "subnetName": "[parameters('subnetName')]",
    "vnetID": "[variables('virtualNetworkName')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
    "backEndAddress": "[parameters('backendaddress')]"
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-03-01",
      "name": "[variables('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "WAF",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "sslPolicy": {
          "disabledSslProtocols": [
            "TLSv1_0",
            "TLSv1_1"
          ],
          "cipherSuites": [
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384_P521",
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384_P384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256_P521",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256_P384",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256_P256",
            "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P521",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P521",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P384",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P521",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P384",
            "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P256",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P521",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P384",
            "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P256",
            "TLS_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_RSA_WITH_AES_256_CBC_SHA256",
            "TLS_RSA_WITH_AES_128_CBC_SHA256",
            "TLS_RSA_WITH_AES_256_CBC_SHA",
            "TLS_RSA_WITH_AES_128_CBC_SHA",
            "TLS_RSA_WITH_3DES_EDE_CBC_SHA"
          ],
          "minProtocolVersion": [
            "TLSv1_2"
          ]
        },
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "IpAddress": "[variables('backEndAddress')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": "[parameters('wafEnabled')]",
          "firewallMode": "[parameters('wafMode')]",
          "ruleSetType": "[parameters('wafRuleSetType')]",
          "ruleSetVersion": "[parameters('wafRuleSetVersion')]",
          "disabledRuleGroups": []
        }
      }
    }
  ]
}